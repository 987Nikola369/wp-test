{"version":3,"sources":["swiper-wrapper.js"],"names":["$","addLeadingZero","number","toString","padStart","parseNumberValue","setting","defaultValue","undefined","isNaN","parseInt","parseItemValue","parseItemGroupValue","inherit","itemsPerView","setSlideHeight","swiper","$wrapperEl","find","css","height","currentSlide","activeIndex","itemHeight","slides","slidesPerView","params","wrapperHeight","spaceBetween","$el","update","findCenteredSlides","visibleSlides","filter","elOffsetLeft","offset","left","elOffsetRight","outerWidth","each","thisSlideOffsetLeft","this","thisSlideOffsetRight","addClass","removeClass","window","minimogSwiperBP","defaults","361","name","576","768","992","1200","1600","fn","MinimogSwiper","options","$swiper","settings","extend","$wrapControls","$customBtn","$swiperPrev","$swiperNext","$slider","$sliderInner","children","first","$sliderContainer","$slides","sliderSettings","data","items","itemsGroup","gutter","speed","useElementorBreakpoints","hasClass","swiperOptions","desktop","itemsDesktop","widescreen","itemsWideScreen","laptop","itemsLaptop","tablet_extra","itemsTabletExtra","tablet","itemsTablet","mobile_extra","itemsMobileExtra","mobile","itemsMobile","itemsGroupDesktop","itemsGroupWideScreen","itemsGroupLaptop","itemsGroupTabletExtra","itemsGroupTablet","itemsGroupMobileExtra","itemsGroupMobile","gutterDesktop","gutterWideScreen","gutterLaptop","gutterTabletExtra","gutterTablet","gutterMobileExtra","gutterMobile","init","watchSlidesProgress","slidesPerGroup","resizeObserver","lazy","breakpoints","forElementor","elementor","bpValue","elementorFrontendConfig","responsive","finalBreakpoints","previousBP","lastBP","lastBPValue","key","hasOwnProperty","is_enabled","value","swiperBreakpointSettings","watchOverflow","autoHeight","simulateTouch","effect","fadeEffect","crossFade","loop","loopedSlides","centered","centeredSlides","autoplay","delay","disableOnInteraction","autoplayReverseDirection","reverseDirection","freeMode","wrapControls","$wrapControlsWrap","append","nav","customNav","$fractionWrapper","pagination","el","get","type","clickable","renderCustom","current","total","renderBullet","index","className","$minimogSwiper","prevText","nextText","navStyle","$swiperNavButtons","$swiperNavButtonsWrap","navAlignedBy","navContainerClass","navGridContainer","navigation","nextEl","prevEl","$swiperPaginationWrap","$swiperPagination","$swiperPaginationContainerWrap","paginationAlignedBy","paginationType","paginationDynamicBullets","dynamicBullets","paginationText","mousewheel","enabled","vertical","direction","slideToClickedSlide","touchRatio","Swiper","layerTransition","on","verticalAutoHeight","attr","newLoopValue","length","loopCreate","loopDestroy","slidesLength","virtual","numberOfBullets","Math","ceil","snapGrid","$wrapper","closest","setTimeout","centeredHightlight","$thisSlide","slidePrev","slideNext","document","trigger","jQuery"],"mappings":"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","file":"../../swiper-wrapper.min.js","sourcesContent":["(function( $ ) {\n\t'use strict';\n\n\twindow.minimogSwiperBP = {\n\t\tdefaults: {\n\t\t\t361: {\n\t\t\t\tname: 'mobile_extra'\n\t\t\t},\n\t\t\t576: {\n\t\t\t\tname: 'tablet'\n\t\t\t},\n\t\t\t768: {\n\t\t\t\tname: 'tablet_extra'\n\t\t\t},\n\t\t\t992: {\n\t\t\t\tname: 'laptop'\n\t\t\t},\n\t\t\t1200: {\n\t\t\t\tname: 'desktop'\n\t\t\t},\n\t\t\t1600: {\n\t\t\t\tname: 'widescreen'\n\t\t\t}\n\t\t}\n\t};\n\n\t$.fn.MinimogSwiper = function( options ) {\n\t\tvar defaults = {},\n\t\t    settings = $.extend( true, {}, defaults, options );\n\n\t\tvar $swiper;\n\n\t\tthis.each( function() {\n\t\t\tvar $slider                 = $( this ),\n\t\t\t    $sliderInner            = $slider.children( '.swiper-inner' ).first(),\n\t\t\t    $sliderContainer        = $sliderInner.children( '.swiper' ).first(),\n\t\t\t    $slides                 = $sliderInner.find( '.swiper-slide' ),\n\t\t\t    sliderSettings          = $slider.data(),\n\t\t\t    items                   = {},\n\t\t\t    itemsGroup              = {},\n\t\t\t    gutter                  = {},\n\t\t\t    speed                   = parseNumberValue( sliderSettings.speed, 500 ),\n\t\t\t    useElementorBreakpoints = $slider.hasClass( 'use-elementor-breakpoints' );\n\n\t\t\titems.desktop           = parseItemValue( sliderSettings.itemsDesktop, 1 );\n\t\t\titems.widescreen        = parseItemValue( sliderSettings.itemsWideScreen, items.desktop );\n\t\t\titems.laptop            = parseItemValue( sliderSettings.itemsLaptop, items.desktop );\n\t\t\titems.tablet_extra      = parseItemValue( sliderSettings.itemsTabletExtra, items.laptop );\n\t\t\titems.tablet            = parseItemValue( sliderSettings.itemsTablet, items.tablet_extra );\n\t\t\titems.mobile_extra      = parseItemValue( sliderSettings.itemsMobileExtra, items.tablet );\n\t\t\titems.mobile            = parseItemValue( sliderSettings.itemsMobile, items.mobile_extra );\n\t\t\titemsGroup.desktop      =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupDesktop, items.desktop, items.desktop ); // Slides Per Group, Default same as Slides Per View.\n\t\t\titemsGroup.widescreen   =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupWideScreen, itemsGroup.desktop, items.widescreen );\n\t\t\titemsGroup.laptop       =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupLaptop, itemsGroup.desktop, items.laptop );\n\t\t\titemsGroup.tablet_extra =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupTabletExtra, itemsGroup.laptop, items.tablet_extra );\n\t\t\titemsGroup.tablet       =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupTablet, itemsGroup.tablet_extra, items.tablet );\n\t\t\titemsGroup.mobile_extra =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupMobileExtra, itemsGroup.tablet, items.mobile_extra );\n\t\t\titemsGroup.mobile       =\n\t\t\t\tparseItemGroupValue( sliderSettings.itemsGroupMobile, itemsGroup.mobile_extra, items.mobile );\n\t\t\tgutter.desktop          = parseNumberValue( sliderSettings.gutterDesktop, 0 ); // Distance between slides.\n\t\t\tgutter.widescreen       = parseNumberValue( sliderSettings.gutterWideScreen, gutter.desktop );\n\t\t\tgutter.laptop           = parseNumberValue( sliderSettings.gutterLaptop, gutter.desktop );\n\t\t\tgutter.tablet_extra     = parseNumberValue( sliderSettings.gutterTabletExtra, gutter.laptop );\n\t\t\tgutter.tablet           = parseNumberValue( sliderSettings.gutterTablet, gutter.tablet_extra );\n\t\t\tgutter.mobile_extra     = parseNumberValue( sliderSettings.gutterMobileExtra, gutter.tablet );\n\t\t\tgutter.mobile           = parseNumberValue( sliderSettings.gutterMobile, gutter.mobile_extra );\n\n\t\t\tvar swiperOptions = $.extend( {}, {\n\t\t\t\tinit: false,\n\t\t\t\t//watchSlidesVisibility: true,\n\t\t\t\twatchSlidesProgress: true,\n\t\t\t\tslidesPerView: items.mobile,\n\t\t\t\tslidesPerGroup: itemsGroup.mobile,\n\t\t\t\tspaceBetween: gutter.mobile,\n\t\t\t\tresizeObserver: true,\n\t\t\t\tlazy: true,\n\t\t\t\tbreakpoints: getSwiperBreakpoints( items, itemsGroup, gutter, useElementorBreakpoints )\n\t\t\t}, settings );\n\n\t\t\tswiperOptions.watchOverflow = true;\n\n\t\t\tif ( sliderSettings.autoHeight ) {\n\t\t\t\tswiperOptions.autoHeight = true;\n\t\t\t}\n\n\t\t\tif ( typeof sliderSettings.simulateTouch !== 'undefined' && ! sliderSettings.simulateTouch ) {\n\t\t\t\tswiperOptions.simulateTouch = false;\n\t\t\t}\n\n\t\t\tif ( speed ) {\n\t\t\t\tswiperOptions.speed = speed;\n\t\t\t}\n\n\t\t\t// Maybe: fade, flip.\n\t\t\tif ( sliderSettings.effect ) {\n\t\t\t\tswiperOptions.effect = sliderSettings.effect;\n\n\t\t\t\tif ( 'fade' === sliderSettings.effect ) {\n\t\t\t\t\tswiperOptions.fadeEffect = {\n\t\t\t\t\t\tcrossFade: 'custom' !== sliderSettings.fadeEffect\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sliderSettings.loop ) {\n\t\t\t\tswiperOptions.loop = true;\n\n\t\t\t\tif ( sliderSettings.loopedSlides ) {\n\t\t\t\t\tswiperOptions.loopedSlides = sliderSettings.loopedSlides;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sliderSettings.centered ) {\n\t\t\t\tswiperOptions.centeredSlides = true;\n\t\t\t}\n\n\t\t\tif ( sliderSettings.autoplay ) {\n\t\t\t\tswiperOptions.autoplay = {\n\t\t\t\t\tdelay: sliderSettings.autoplay,\n\t\t\t\t\tdisableOnInteraction: false\n\t\t\t\t};\n\n\t\t\t\tif ( sliderSettings.autoplayReverseDirection ) {\n\t\t\t\t\tswiperOptions.autoplay.reverseDirection = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sliderSettings.freeMode ) {\n\t\t\t\tswiperOptions.freeMode = true;\n\t\t\t}\n\n\t\t\tvar $wrapControls;\n\n\t\t\tif ( sliderSettings.wrapControls ) {\n\t\t\t\tvar $wrapControlsWrap = $( '<div class=\"swiper-controls-wrap\"></div>' );\n\t\t\t\t$wrapControls         = $( '<div class=\"swiper-controls\"></div>' );\n\n\t\t\t\t$wrapControlsWrap.append( $wrapControls );\n\t\t\t\t$slider.append( $wrapControlsWrap );\n\t\t\t}\n\n\t\t\tif ( sliderSettings.nav ) {\n\n\t\t\t\tif ( sliderSettings.customNav && sliderSettings.customNav !== '' ) {\n\t\t\t\t\tvar $customBtn       = $( '#' + sliderSettings.customNav ),\n\t\t\t\t\t    $fractionWrapper = $( '.pagination-wrapper', $customBtn ),\n\t\t\t\t\t    $swiperPrev      = $customBtn.find( '.slider-prev-btn' ),\n\t\t\t\t\t    $swiperNext      = $customBtn.find( '.slider-next-btn' );\n\n\t\t\t\t\tif ( $customBtn.hasClass( 'style-02' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\tel: $fractionWrapper.get(0),\n\t\t\t\t\t\t\ttype: 'custom',\n\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + $customBtn.data( 'text' ) + '</div><div class=\"current\">' + current + '</div><div class=\"separator\">/</div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $customBtn.hasClass( 'style-03' ) || $customBtn.hasClass( 'style-04' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\tel: $fractionWrapper.get(0),\n\t\t\t\t\t\t\ttype: 'bullets',\n\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tvar $swiperPrev = $( '<div class=\"swiper-nav-button swiper-button-prev\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\">' + $minimogSwiper.prevText + '</span></div>' );\n\t\t\t\t\tvar $swiperNext = $( '<div class=\"swiper-nav-button swiper-button-next\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\">' + $minimogSwiper.nextText + '</span></div>' );\n\n\t\t\t\t\tif ( '03' === sliderSettings.navStyle ) {\n\t\t\t\t\t\tvar $arrowRightSvg = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 8L21.2222 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M15.7773 1L22.7773 8L15.7773 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\tvar $arrowLeftSvg  = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23 8L2.77778 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M8.22266 1L1.22266 8L8.22266 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\t$swiperPrev        =\n\t\t\t\t\t\t\t$( '<div class=\"swiper-nav-button swiper-button-prev\">' + $arrowLeftSvg + '</div>' );\n\t\t\t\t\t\t$swiperNext        =\n\t\t\t\t\t\t\t$( '<div class=\"swiper-nav-button swiper-button-next\">' + $arrowRightSvg + '</div>' );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $swiperNavButtons = $( '<div class=\"swiper-nav-buttons\"></div>' );\n\t\t\t\t\t$swiperNavButtons.append( $swiperPrev ).append( $swiperNext );\n\n\t\t\t\t\tvar $swiperNavButtonsWrap = $( '<div class=\"swiper-nav-buttons-wrap\"></div>' );\n\n\t\t\t\t\tif ( 'grid' == sliderSettings.navAlignedBy ) {\n\t\t\t\t\t\tvar navContainerClass = sliderSettings.navGridContainer ? sliderSettings.navGridContainer : 'container';\n\t\t\t\t\t\t$swiperNavButtonsWrap.append( '<div class=\"' + navContainerClass + '\"></div>' );\n\t\t\t\t\t\t$swiperNavButtonsWrap.children( '[class*=container]' ).append( $swiperNavButtons );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$swiperNavButtonsWrap.append( $swiperNavButtons );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t\t$wrapControls.append( $swiperNavButtonsWrap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sliderInner.append( $swiperNavButtonsWrap );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswiperOptions.navigation = {\n\t\t\t\t\tnextEl: $swiperNext.get(0),\n\t\t\t\t\tprevEl: $swiperPrev.get(0)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( sliderSettings.pagination ) {\n\t\t\t\tvar $swiperPaginationWrap = $( '<div class=\"swiper-pagination-wrap\"><div class=\"swiper-pagination-inner\"></div></div>' );\n\t\t\t\tvar $swiperPagination     = $( '<div class=\"swiper-pagination\"></div>' );\n\n\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperPagination );\n\n\t\t\t\tvar $swiperPaginationContainerWrap = $( '<div class=\"swiper-pagination-container\"></div>' );\n\n\t\t\t\tif ( 'grid' == sliderSettings.paginationAlignedBy ) {\n\t\t\t\t\t$swiperPaginationContainerWrap.append( '<div class=\"container\"><div class=\"row\"><div class=\"col-sm-12\"></div></div></div>' );\n\t\t\t\t\t$swiperPaginationContainerWrap.find( '.col-sm-12' ).append( $swiperPaginationWrap );\n\t\t\t\t} else {\n\t\t\t\t\t$swiperPaginationContainerWrap.append( $swiperPaginationWrap );\n\t\t\t\t}\n\n\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t$wrapControls.append( $swiperPaginationContainerWrap );\n\t\t\t\t} else {\n\t\t\t\t\t$slider.append( $swiperPaginationContainerWrap );\n\t\t\t\t}\n\n\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\tel: $swiperPagination.get(0),\n\t\t\t\t\ttype: sliderSettings.paginationType ? sliderSettings.paginationType : 'bullets',\n\t\t\t\t\tclickable: true\n\t\t\t\t};\n\n\t\t\t\tif ( sliderSettings.paginationDynamicBullets ) {\n\t\t\t\t\tswiperOptions.pagination.dynamicBullets = true;\n\t\t\t\t}\n\n\t\t\t\tif ( $slider.hasClass( 'pagination-style-04' ) ) {\n\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + sliderSettings.paginationText + '</div><div class=\"current\">' + current + '</div><div class=\"separator\">/</div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t};\n\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-03' ) ) {\n\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + addLeadingZero( current ) + '</div><div class=\"separator\"></div><div class=\"total\">' + addLeadingZero( total ) + '</div></div>';\n\t\t\t\t\t};\n\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-06' ) ) {\n\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + current + '<div class=\"separator\">/</div></div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t};\n\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-07' ) ) {\n\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\treturn '<span class=\"' + className + '\">' + addLeadingZero( index + 1 ) + '<span class=\"dot\">.</span></span>';\n\t\t\t\t\t};\n\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-08' ) || $slider.hasClass( 'pagination-style-10' ) ) {\n\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sliderSettings.mousewheel ) {\n\t\t\t\tswiperOptions.mousewheel = {\n\t\t\t\t\tenabled: true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( sliderSettings.vertical ) {\n\t\t\t\tswiperOptions.direction = 'vertical';\n\t\t\t}\n\n\t\t\tif ( sliderSettings.slideToClickedSlide ) {\n\t\t\t\tswiperOptions.slideToClickedSlide = true;\n\t\t\t\tswiperOptions.touchRatio          = 0.2;\n\t\t\t}\n\n\t\t\t$swiper = new Swiper( $sliderContainer.get(0), swiperOptions );\n\n\t\t\tif ( sliderSettings.layerTransition ) {\n\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\tvar slides       = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t/**\n\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t *\n\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t */\n\t\t\t\t\tvar currentSlide = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tcurrentSlide.addClass( 'animated' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\t\tvar slides        = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t/**\n\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t *\n\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t */\n\t\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tvisibleSlides.addClass( 'animated' );\n\n\t\t\t\t\tslides.removeClass( 'swiper-ken-burn-active' );\n\t\t\t\t\tvisibleSlides.addClass( 'swiper-ken-burn-active' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tslides.removeClass( 'animated' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( sliderSettings.vertical && sliderSettings.verticalAutoHeight ) {\n\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'transitionEnd', function() {\n\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\n\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t} );\n\n\t\t\t/**\n\t\t\t * Use beforeInit instead of init to avoid broken slider view auto.\n\t\t\t * Updated: On some cases Normal per views return \"auto\" instead of real per view on beforeInit\n\t\t\t * then we needed init event to avoid broken render.\n\t\t\t */\n\t\t\t$swiper.on( 'beforeInit', function() {\n\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t} );\n\n\t\t\t$swiper.on( 'init', function() {\n\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\n\t\t\t\tvar slides        = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\tvisibleSlides.addClass( 'minimog-slide-active' );\n\n\t\t\t\tif ( sliderSettings.loop ) {\n\t\t\t\t\tvar newLoopValue = 'auto' === slidesPerView || ($slides.length > slidesPerView);\n\n\t\t\t\t\tif ( $swiper.params.loop != newLoopValue ) {\n\t\t\t\t\t\t// Toggle loop.\n\t\t\t\t\t\t$swiper.params.loop = newLoopValue;\n\n\t\t\t\t\t\tif ( newLoopValue ) {\n\t\t\t\t\t\t\t$swiper.loopCreate();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$swiper.loopDestroy();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$swiper.update();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\tvar slides        = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\tvisibleSlides.addClass( 'minimog-slide-active' );\n\t\t\t} );\n\n\t\t\t/**\n\t\t\t * Hide pagination if slider has only bullet\n\t\t\t */\n\t\t\t$swiper.on( 'paginationRender', function() {\n\t\t\t\tvar slidesLength    = $swiper.virtual && $swiper.params.virtual.enabled ? $swiper.virtual.slides.length : $swiper.slides.length;\n\t\t\t\tvar numberOfBullets = $swiper.params.loop ? Math.ceil( (slidesLength - ($swiper.loopedSlides * 2)) / $swiper.params.slidesPerGroup ) : $swiper.snapGrid.length;\n\n\t\t\t\tvar $wrapper = $( $swiper.$wrapperEl ).closest( '.tm-swiper' );\n\t\t\t\tnumberOfBullets > 1 ? $wrapper.removeClass( 'pagination-hidden' ) : $wrapper.addClass( 'pagination-hidden' );\n\t\t\t} );\n\n\t\t\tif ( sliderSettings.centered ) {\n\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\t$swiper.$wrapperEl.find( '.swiper-slide' ).removeClass( 'swiper-slide-centered swiper-slide-uncentered' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'transitionEnd', function() {\n\t\t\t\t\tfindCenteredSlides( this, $swiper.$wrapperEl.find( '.swiper-slide' ) );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'update', function() {\n\t\t\t\t\tvar swiper = this;\n\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t//slides.removeClass( 'swiper-slide-uncentered swiper-slide-centered' );\n\n\t\t\t\t\t\tfindCenteredSlides( swiper, slides );\n\t\t\t\t\t}, 500 ); // Delay to sure swiper layout render completed.\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Center Mode Handler\n\t\t\t */\n\t\t\tif ( sliderSettings.centeredHightlight && 'scale' === sliderSettings.centeredHightlight ) {\n\t\t\t\t$swiper.on( 'beforeInit resize', function() {\n\t\t\t\t\tsetSlideHeightCenterMode( this );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t$swiper.init();\n\n\t\t\t$slider.on( 'click', '.swiper-alt-arrow-button', function() {\n\t\t\t\t'prev' === $( this ).data( 'action' ) ? $swiper.slidePrev() : $swiper.slideNext();\n\t\t\t} );\n\n\t\t\t$( document ).trigger( 'MinimogSwiperInit', [ $swiper, $slider, swiperOptions ] );\n\t\t} );\n\n\t\treturn $swiper;\n\t};\n\n\tfunction getBreakpoints( forElementor = false ) {\n\t\tif ( forElementor ) {\n\t\t\tif ( window.minimogSwiperBP.elementor ) {\n\t\t\t\treturn window.minimogSwiperBP.elementor\n\t\t\t} else {\n\t\t\t\tvar breakpoints      = elementorFrontendConfig.responsive.breakpoints,\n\t\t\t\t    finalBreakpoints = {},\n\t\t\t\t    previousBP       = 0,\n\t\t\t\t    lastBP           = '',\n\t\t\t\t    lastBPValue      = 0;\n\n\t\t\t\tfor ( const key in breakpoints ) {\n\t\t\t\t\tif ( breakpoints.hasOwnProperty( key ) && breakpoints[key].is_enabled ) {\n\n\t\t\t\t\t\tlastBP = key;\n\n\t\t\t\t\t\tvar bpValue = previousBP + 1;\n\n\t\t\t\t\t\tlastBPValue = bpValue;\n\t\t\t\t\t\tpreviousBP  = breakpoints[key].value;\n\n\t\t\t\t\t\tif ( 'mobile' === key ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfinalBreakpoints[bpValue] = {\n\t\t\t\t\t\t\tname: key\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( 'widescreen' === lastBP ) {\n\t\t\t\t\tfinalBreakpoints[lastBPValue].name                = 'desktop';\n\t\t\t\t\tfinalBreakpoints[breakpoints['widescreen'].value] = {\n\t\t\t\t\t\tname: 'widescreen'\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tfinalBreakpoints[previousBP + 1] = {\n\t\t\t\t\t\tname: 'desktop'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\twindow.minimogSwiperBP.elementor = finalBreakpoints;\n\n\t\t\t\treturn window.minimogSwiperBP.elementor;\n\t\t\t}\n\t\t} else {\n\t\t\treturn window.minimogSwiperBP.defaults;\n\t\t}\n\t}\n\n\tfunction getSwiperBreakpoints( items, itemsGroup, gutter, forElementor = false ) {\n\t\tvar breakpoints              = getBreakpoints( forElementor ),\n\t\t    swiperBreakpointSettings = {};\n\n\t\tfor ( const key in breakpoints ) {\n\t\t\tvar name = breakpoints[key].name;\n\n\t\t\tswiperBreakpointSettings[key] = {\n\t\t\t\tslidesPerView: items[name],\n\t\t\t\tslidesPerGroup: itemsGroup[name],\n\t\t\t\tspaceBetween: gutter[name],\n\t\t\t}\n\t\t}\n\n\t\treturn swiperBreakpointSettings;\n\t}\n\n\tfunction addLeadingZero( number ) {\n\t\t// Convert to string.\n\t\tnumber = number.toString();\n\n\t\t// Add leading 0.\n\t\treturn number.padStart( 2, '0' );\n\t}\n\n\tfunction parseNumberValue( setting = '', defaultValue = '' ) {\n\t\tif ( undefined === setting || '' === setting || isNaN( setting ) ) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn parseInt( setting );\n\t}\n\n\tfunction parseItemValue( setting = '', defaultValue = '' ) {\n\t\tif ( undefined === setting || '' === setting ) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\t// Normalize slide per view, reset fake view to exist view.\n\t\tif ( 'auto-fixed' === setting ) {\n\t\t\treturn 'auto';\n\t\t}\n\n\t\treturn setting;\n\t}\n\n\tfunction parseItemGroupValue( setting = '', inherit, itemsPerView ) {\n\t\tif ( 'auto' === itemsPerView ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif ( 'auto' === inherit ) {\n\t\t\tinherit = 1;\n\t\t} else if ( 'inherit' === inherit || parseInt( inherit ) > parseInt( itemsPerView ) ) {\n\t\t\tinherit = itemsPerView;\n\t\t}\n\n\t\tif ( undefined === setting || '' === setting ) {\n\t\t\treturn inherit || 1;\n\t\t} else if ( 'inherit' === setting ) {\n\t\t\treturn itemsPerView || 1;\n\t\t}\n\n\t\treturn parseInt( setting );\n\t}\n\n\tfunction setSlideHeight( swiper ) {\n\t\tvar slides = swiper.$wrapperEl.find( '.swiper-slide' );\n\t\tslides.css( { height: 'auto' } );\n\n\t\tvar currentSlide  = swiper.activeIndex,\n\t\t    itemHeight    = $( swiper.slides[currentSlide] ).height(),\n\t\t    slidesPerView = swiper.params.slidesPerView,\n\t\t    spaceBetween  = swiper.params.spaceBetween,\n\t\t    wrapperHeight = slidesPerView * itemHeight + (slidesPerView - 1) * spaceBetween;\n\n\t\t$( swiper.$el ).height( wrapperHeight );\n\t\t$( swiper.$wrapperEl ).find( '.swiper-slide' ).height( itemHeight );\n\n\t\tswiper.update();\n\t}\n\n\tfunction setSlideHeightCenterMode( swiper ) {\n\t\tvar slides = swiper.$wrapperEl.find( '.swiper-slide' ).each( function() {\n\t\t\tvar $thisSlide = $( this );\n\t\t\t$thisSlide.css( '--placeholder-height', $thisSlide.children().height() + 'px' );\n\t\t} );\n\t}\n\n\tfunction findCenteredSlides( swiper, slides ) {\n\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' ),\n\t\t    elOffsetLeft  = $( swiper.$el ).offset().left,\n\t\t    elOffsetRight = elOffsetLeft + $( swiper.$el ).outerWidth();\n\n\t\tvisibleSlides.each( function() {\n\t\t\tvar thisSlideOffsetLeft  = $( this ).offset().left - 1,\n\t\t\t    thisSlideOffsetRight = $( this ).offset().left + 1 + $( this ).outerWidth();\n\n\t\t\tif ( thisSlideOffsetLeft > elOffsetLeft && thisSlideOffsetRight < elOffsetRight ) {\n\t\t\t\t$( this ).addClass( 'swiper-slide-centered' ).removeClass( 'swiper-slide-uncentered' );\n\t\t\t} else {\n\t\t\t\t$( this ).removeClass( 'swiper-slide-centered' ).addClass( 'swiper-slide-uncentered' );\n\t\t\t}\n\t\t} );\n\t}\n}( jQuery ));\n"]}